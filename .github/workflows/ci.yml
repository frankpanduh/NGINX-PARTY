name: "‚ö° Build NGINX-PARTY"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  preflight:
    name: "üíª Preflight Checks"
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Checkout Repo"
        uses: actions/checkout@v4

      - name: "üêß Install Dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential git wget curl libpcre3-dev zlib1g-dev libssl-dev \
            libxml2-dev libxslt1-dev libgd-dev libgeoip-dev libtool automake \
            libyajl-dev liblmdb-dev libluajit-5.1-dev \
            php8.3-cli php8.3-fpm mariadb-client composer redis-server \
            ccache unzip tar cmake
          sudo rm -rf /var/lib/apt/lists/*

      - name: "‚úÖ Soft Preflight"
        run: |
          # Check Brotli
          if [ ! -d "./ngx_brotli/deps/brotli" ]; then
            echo "‚ùå Brotli submodule missing or not initialized"
            exit 1
          fi

          # Check ModSecurity repo only
          if [ "$ENABLE_MODSEC" = "true" ]; then
            if [ ! -d "./ModSecurity" ]; then
              echo "‚ùå ModSecurity repo missing"
              exit 1
            fi
          fi

          echo "‚úÖ Preflight complete"
        shell: /usr/bin/bash -e {0}
        env:
          ENABLE_MODSEC: true

  build:
    name: "‚ö° Build NGINX-PARTY"
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: "üì• Checkout Repo"
        uses: actions/checkout@v4

      - name: "üêô Clone Modules"
        run: |
          git clone --depth 1 https://github.com/nginx/nginx.git -b release-${NGINX_VERSION} nginx-${NGINX_VERSION}-src
          git clone --depth 1 https://github.com/google/ngx_brotli.git
          git -C ngx_brotli submodule update --init --recursive
          git clone --depth 1 https://github.com/FRiCKLE/ngx_cache_purge.git
          git clone --depth 1 https://github.com/aperezdc/ngx-fancyindex.git
          git clone --depth 1 https://github.com/vozlt/nginx-module-vts.git
          if [ "$ENABLE_MODSEC" = "true" ]; then
            git clone --depth 1 https://github.com/SpiderLabs/ModSecurity.git
            git -C ModSecurity submodule update --init --recursive
          fi

      - name: "‚öôÔ∏è Configure & Build NGINX"
        run: |
          cd nginx-${NGINX_VERSION}-src
          ./auto/configure \
            --with-compat \
            --with-http_ssl_module \
            --with-http_v3_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-threads \
            --with-http_gzip_static_module \
            --with-http_v2_module \
            --with-http_image_filter_module \
            --add-module=../ngx_brotli \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex \
            --add-module=../nginx-module-vts \
            $( [ "$ENABLE_MODSEC" = "true" ] && echo "--add-module=../ModSecurity/nginx/modsecurity" ) \
            --with-http_stub_status_module \
            --with-http_secure_link_module \
            --with-http_realip_module \
            --with-http_slice_module
          make -j$(nproc)
          sudo make install
          cd ..
          echo "üöÄ NGINX-PARTY build complete!"

      - name: "üì¶ Package as DEB"
        run: |
          fpm -s dir -t deb -n nginx-party -v ${NGINX_VERSION} \
            --prefix=/usr/local/nginx \
            -C nginx-${NGINX_VERSION}-src \
            .
    env:
      NGINX_VERSION: 1.29.1
      OPENSSL_VERSION: 3.3.1
      ENABLE_MODSEC: true