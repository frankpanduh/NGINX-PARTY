name: "üõ†Ô∏è NGINX-PARTY CI (Stable + QUIC + Mods)"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NGINX_VERSION: 1.29.1
  OPENSSL_VERSION: 3.3.1
  ENABLE_MODSEC: true
  MODSEC_MODE: DetectionOnly

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "üåê Checkout Repository"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "üß∞ Install Dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential libpcre3-dev zlib1g-dev libssl-dev \
            libxml2-dev libcurl4-openssl-dev libyajl-dev libgeoip-dev \
            liblua5.3-dev ccache wget git debhelper devscripts dh-make fakeroot
          sudo rm -rf /var/lib/apt/lists/*

      - name: "üíæ Cache ccache + nginx source"
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            nginx-${{ env.NGINX_VERSION }}-src
          key: ${{ runner.os }}-nginx-${{ env.NGINX_VERSION }}-${{ env.OPENSSL_VERSION }}

      - name: "üåü Clone NGINX Source"
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone --branch release-${NGINX_VERSION} --depth 1 https://github.com/nginx/nginx.git nginx-${NGINX_VERSION}-src
          if [ ! -f "nginx-${NGINX_VERSION}-src/auto/configure" ]; then
            echo "‚ùå nginx/auto/configure missing!"
            exit 1
          fi

      - name: "üõ†Ô∏è Configure & Build NGINX"
        run: |
          cd nginx-${NGINX_VERSION}-src
          ./auto/configure \
            --with-compat \
            --with-http_ssl_module \
            --with-http_v3_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-threads \
            --with-http_gzip_static_module \
            --with-http_v2_module \
            --with-http_image_filter_module \
            --with-http_flv_module \
            --with-http_mp4_module \
            --add-module=../ngx_brotli \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex \
            $( [ "$ENABLE_MODSEC" == "true" ] && echo "--add-module=../ModSecurity/nginx/modsecurity" )
          make -j$(nproc)
          sudo make install
          cd ..
          echo "üöÄ NGINX + ModSecurity build complete ‚Äî panda style!"

      - name: "üì¶ Package DEB"
        run: |
          cd nginx-${NGINX_VERSION}-src
          mkdir -p ../nginx-deb
          checkinstall --pkgname=nginx-party --pkgversion=$NGINX_VERSION \
            --install=no --fstrans=yes --default
          mv *.deb ../nginx-deb/
          cd ..

      - name: "üì§ Upload DEB Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: nginx-party-deb
          path: nginx-deb/*.deb