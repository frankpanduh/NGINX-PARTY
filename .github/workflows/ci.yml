name: üõ†Ô∏è NGINX-PARTY CI (Stable + QUIC + Mods + Flair)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NGINX_VERSION: 1.29.1
  OPENSSL_VERSION: 3.3.1
  ENABLE_MODSEC: true
  MODSEC_MODE: DetectionOnly

jobs:
  build-nginx:
    runs-on: ubuntu-latest

    steps:
      - name: ‚ö° Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: üèéÔ∏è Cache APT Packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/ci.yml') }}

      - name: üõ†Ô∏è Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential autoconf automake libtool pkg-config \
            libpcre3 libpcre3-dev libxml2 libxml2-dev libcurl4-openssl-dev \
            libyajl-dev libgeoip-dev lua5.3 liblua5.3-dev git wget unzip \
            zlib1g-dev libmbedtls-dev libssl-dev ccache
          sudo rm -rf /var/lib/apt/lists/*

      - name: üêº Clone ModSecurity
        run: |
          git clone --depth 1 https://github.com/SpiderLabs/ModSecurity.git
          cd ModSecurity
          git submodule update --init --recursive
          autoreconf -fi
          ./configure
          make -j$(nproc)
          sudo make install
          cd ..
          echo "‚úÖ ModSecurity installed!"

      - name: üåê Download & Extract NGINX
        run: |
          echo "Fetching NGINX ${NGINX_VERSION} source..."
          wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -O nginx-${NGINX_VERSION}.tar.gz
          tar -xzf nginx-${NGINX_VERSION}.tar.gz
          if [ ! -d "nginx-${NGINX_VERSION}" ]; then
            echo "‚ùå Extraction failed: nginx-${NGINX_VERSION} not found"
            exit 1
          fi
          mv nginx-${NGINX_VERSION} nginx-${NGINX_VERSION}-src
          if [ ! -f "nginx-${NGINX_VERSION}-src/auto/configure" ]; then
            echo "‚ùå nginx/auto/configure missing!"
            exit 1
          fi
          echo "‚úÖ NGINX source ready"

      - name: üîß Configure & Build NGINX with Modules
        run: |
          cd nginx-${NGINX_VERSION}-src
          ccache -M 5G
          ./auto/configure \
            --with-compat \
            --with-http_ssl_module \
            --with-http_v3_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-threads \
            --with-http_gzip_static_module \
            --with-http_v2_module \
            --with-http_image_filter_module \
            --with-http_websocket_module \
            --with-http_videostream_module \
            --with-http_realip_module \
            --with-http_slice_module \
            --with-openssl-opt="enable-tls1_3 enable-ktls enable-ec_nistp_64_gcc_128" \
            --add-module=../ngx_brotli \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex \
            $( [ "$ENABLE_MODSEC" == "true" ] && echo "--add-module=../ModSecurity/nginx/modsecurity" )
          make -j$(nproc)
          sudo make install
          cd ..
          echo "üöÄ NGINX + ModSecurity + QUIC build complete ‚Äî panda style!"