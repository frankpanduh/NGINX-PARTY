name: 🚀 NGINX-PARTY CI Build 🐼

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENABLE_MODSEC: true
      MODSEC_MODE: DetectionOnly
      NGINX_VERSION: latest
      OPENSSL_VERSION: 3.3.1

    steps:
      - name: 🐼 Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 🛠 Setup Dependencies
        run: |
          echo "Installing build tools and dependencies..."
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libpcre3 libpcre3-dev zlib1g-dev libssl-dev \
            git curl wget autoconf automake libtool pkg-config rustc cargo python3 python3-pip

      - name: 📦 ModSecurity Submodules 🛡️
        if: env.ENABLE_MODSEC == 'true'
        run: |
          echo "Initializing ModSecurity submodules..."
          cd ModSecurity
          git submodule init
          git submodule update --recursive
          echo "Preparing build scripts..."
          autoreconf -fi
          ./configure
          make -j$(nproc)
          sudo make install
          cd ..

      - name: 🐙 Build NGINX
        run: |
          echo "Building NGINX with media support and QUIC..."
          cd nginx
          ./auto/configure \
            --with-http_ssl_module \
            --with-http_v3_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-threads \
            --with-http_gzip_static_module \
            --with-http_v2_module \
            --add-module=../ngx_brotli \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex
          make -j$(nproc)
          sudo make install
          cd ..

      - name: 🖼️ Test Media Modules
        run: |
          echo "Testing WebP / AVIF support..."
          # placeholder scripts if needed, optional checks

      - name: 🔍 Debug Info
        run: |
          nginx -V
          echo "Listing installed modules and libraries..."
          ldd /usr/local/nginx/sbin/nginx

      - name: 🎁 Save Modular Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nginx-artifacts
          path: |
            nginx
            ngx_brotli
            ngx_cache_purge
            ngx-fancyindex
