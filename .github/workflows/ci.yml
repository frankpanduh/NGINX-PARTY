name: üõ†Ô∏è Build NGINX-PARTY

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: ‚ö° Build NGINX-PARTY
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: üì• Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: üêô Clone Modules
        run: |
          git clone --depth 1 https://github.com/nginx/nginx.git -b release-${NGINX_VERSION} nginx-${NGINX_VERSION}-src
          git clone --depth 1 https://github.com/google/ngx_brotli.git
          git -C ngx_brotli submodule update --init --recursive
          git clone --depth 1 https://github.com/FRiCKLE/ngx_cache_purge.git
          git clone --depth 1 https://github.com/aperezdc/ngx-fancyindex.git
          if [ "$ENABLE_MODSEC" = "true" ]; then
            git clone --depth 1 https://github.com/SpiderLabs/ModSecurity.git
            git -C ModSecurity submodule update --init --recursive
          fi

      - name: ‚ö° Configure & Build NGINX
        run: |
          cd nginx-${NGINX_VERSION}-src
          ./auto/configure \
            --with-compat \
            --with-http_ssl_module \
            --with-http_v3_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-threads \
            --with-http_gzip_static_module \
            --with-http_v2_module \
            --with-http_image_filter_module \
            --add-module=../ngx_brotli \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex \
            $( [ "$ENABLE_MODSEC" = "true" ] && echo "--add-module=../ModSecurity/nginx/modsecurity" ) \
            --with-http_stub_status_module \
            --with-http_secure_link_module \
            --with-http_realip_module \
            --with-cc-opt="-O3 -march=native -fstack-protector-strong -D_FORTIFY_SOURCE=2" \
            --with-ld-opt="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now"
          make -j$(nproc)
          sudo make install
          cd ..
          echo "üöÄ NGINX-PARTY build complete!"

      - name: üì¶ Build DEB Package
        run: |
          mkdir -p deb
          cd nginx-${NGINX_VERSION}-src
          checkinstall --install=no --pkgname=nginx-party --pkgversion=${NGINX_VERSION} --default
          mv *.deb ../deb/
          cd ..
          echo "üì¶ DEB package ready"

    env:
      NGINX_VERSION: 1.29.1
      OPENSSL_VERSION: 3.3.1
      ENABLE_MODSEC: true