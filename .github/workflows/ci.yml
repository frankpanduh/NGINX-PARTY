name: Build NGINX-PARTY .deb üöÄ

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ENABLE_MODSEC: "false"       # Set to "true" to compile ModSecurity v3 + connector
  NGINX_VERSION: ""            # Leave empty for latest NGINX from upstream
  OPENSSL_VERSION: "3.3.1"

jobs:
  build-deb:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source üì•
        uses: actions/checkout@v3

      - name: Install dependencies üîß
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git curl wget ca-certificates unzip pkg-config checkinstall \
            libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev libmaxminddb0 libmaxminddb-dev mmdb-bin \
            libzstd-dev autoconf automake libtool doxygen libxml2 libxml2-dev libyajl-dev libgeoip-dev liblmdb-dev \
            libfuzzy-dev libcurl4-openssl-dev liblua5.3-dev cmake

      - name: Download OpenSSL üõ°
        run: |
          curl -LO "https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz"
          tar xzf "openssl-${OPENSSL_VERSION}.tar.gz"

      - name: Clone NGINX üåê
        run: |
          git clone https://github.com/nginx/nginx.git
          cd nginx
          if [ -n "${NGINX_VERSION}" ]; then
            git checkout "${NGINX_VERSION}"
          fi

      - name: Clone third-party modules üß©
        run: |
          git clone --depth 1 https://github.com/google/ngx_brotli.git
          cd ngx_brotli/deps/brotli
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON .
          make
          sudo make install
          cd ../../../
          git clone --depth 1 https://github.com/tokers/zstd-nginx-module.git
          git clone --depth 1 https://github.com/leev/ngx_http_geoip2_module.git
          git clone --depth 1 https://github.com/openresty/headers-more-nginx-module.git
          git clone --depth 1 https://github.com/FRiCKLE/ngx_cache_purge.git
          git clone --depth 1 https://github.com/aperezdc/ngx-fancyindex.git
          echo "‚úÖ Third-party modules ready"

      - name: Build ModSecurity v3 (optional) üõ°Ô∏è
        if: env.ENABLE_MODSEC == 'true'
