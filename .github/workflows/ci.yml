name: 🚀 NGINX-PARTY CI Build 🐼

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENABLE_MODSEC: true
      MODSEC_MODE: DetectionOnly
      NGINX_VERSION: latest
      OPENSSL_VERSION: 3.3.1

    steps:
      - name: 🐼 Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 🛠 Install build tools & dependencies
        run: |
          echo "Installing build essentials and optional libs..."
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake autoconf automake libtool pkg-config git curl wget \
            rustc cargo python3 python3-pip \
            libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev \
            libbrotli-dev libwebp-dev libavif-dev \
            libcurl4-openssl-dev libyajl-dev liblmdb-dev \
            libgeoip-dev libmaxminddb-dev libxml2-dev \
            liblua5.4-dev libssdeep-dev

      - name: 📦 ModSecurity Submodules 🛡️
        if: env.ENABLE_MODSEC == 'true'
        run: |
          echo "Initializing ModSecurity submodules..."
          cd ModSecurity
          git submodule init
          git submodule update --recursive
          echo "Preparing build scripts..."
          autoreconf -fi
          ./configure
          make -j$(nproc)
          sudo make install
          cd ..
          echo "✅ ModSecurity ninja-panda installed!"

      - name: 🐙 Build NGINX
        run: |
          echo "🔧 Building NGINX with web media powers, QUIC, SSL, caching, stream, and threads..."
          cd nginx || { echo "nginx folder missing, aborting"; exit 1; }
          ./auto/configure \
            --with-http_ssl_module \
            --with-http_v3_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-threads \
            --with-http_gzip_static_module \
            --with-http_v2_module \
            --add-module=../ngx_brotli \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex
          make -j$(nproc)
          sudo make install
          cd ..
          echo "🐼 NGINX built and installed — panda speed unlocked!"

      - name: 🖼️ Test Media Modules
        run: |
          echo "Checking WebP / AVIF / other media module support..."
          # optional verification commands here

      - name: 🔍 Debug Info
        if: failure()
        run: |
          echo "💀 Build failed! Dumping recent sys info for debugging:"
          uname -a
          df -h
          free -m
          ldd /usr/local/nginx/sbin/nginx || echo "nginx binary missing"

      - name: 🎁 Save Modular Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nginx-artifacts
          path: |
            nginx
            ngx_brotli
            ngx_cache_purge
            ngx-fancyindex
