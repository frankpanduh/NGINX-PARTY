name: üîß NGINX-PARTY CI (üõ†Ô∏è Build NGINX 1.29.1 + QUIC + Mods)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NGINX_VERSION: 1.29.1
  OPENSSL_VERSION: 3.3.1
  ENABLE_MODSEC: true
  MODSEC_MODE: DetectionOnly

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: ‚ö° Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/ci.yml') }}

      - name: üåê Setup dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential git wget curl cmake \
            libpcre3 libpcre3-dev zlib1g zlib1g-dev \
            libssl-dev libxml2-dev libxslt1-dev libgd-dev \
            libgeoip-dev libjemalloc-dev libmaxminddb-dev \
            libtool autoconf automake pkg-config \
            libyajl-dev liblmdb-dev libcurl4-openssl-dev \
            python3 python3-pip libluajit-5.1-dev \
            libbrotli-dev libbrotli1 debhelper dh-make \
            fakeroot libjemalloc-dev ccache
          sudo rm -rf /var/lib/apt/lists/*

      - name: üì• Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ env.NGINX_VERSION }}-${{ env.OPENSSL_VERSION }}

      - name: ü¶æ Clone NGINX source
        run: |
          git clone --depth 1 --branch release-${NGINX_VERSION} https://github.com/nginx/nginx.git nginx-${NGINX_VERSION}-src

      - name: üõ†Ô∏è Fetch modules
        run: |
          git clone --depth 1 https://github.com/google/ngx_brotli.git
          git submodule update --init --recursive
          git clone --depth 1 https://github.com/FRiCKLE/ngx_cache_purge.git
          git clone --depth 1 https://github.com/aperezdc/ngx-fancyindex.git
          git clone --depth 1 https://github.com/SpiderLabs/ModSecurity.git ModSecurity
          cd ModSecurity
          git submodule update --init --recursive
          git checkout v3/master
          ./build.sh
          ./configure
          make -j$(nproc)
          cd ..

      - name: üîß Build NGINX + modules
        run: |
          cd nginx-${NGINX_VERSION}-src
          if [ ! -f "./auto/configure" ]; then
            echo "‚ùå nginx/auto/configure missing!"
            exit 1
          fi
          ./auto/configure \
            --with-compat \
            --with-http_ssl_module \
            --with-http_v3_module \
            --with-stream \
            --with-stream_ssl_module \
            --with-threads \
            --with-http_gzip_static_module \
            --with-http_v2_module \
            --with-http_image_filter_module \
            --with-http_websocket_module \
            --with-http_videostream_module \
            --add-module=../ngx_brotli \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex \
            $( [ "$ENABLE_MODSEC" == "true" ] && echo "--add-module=../ModSecurity/nginx/modsecurity" )
          make -j$(nproc)
          sudo make install
          cd ..
          echo "üöÄ NGINX + ModSecurity build complete ‚Äî panda style!"

      - name: üì¶ Package .deb
        run: |
          cd nginx-${NGINX_VERSION}-src
          checkinstall -y --pkgname=nginx-party --pkgversion=${NGINX_VERSION} --backup=no \
            --deldoc=yes --fstrans=no --default
          cd ..