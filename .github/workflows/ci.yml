name: Build NGINX-PARTY .deb üöÄ

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ENABLE_MODSEC: "true"
  MODSEC_MODE: "DetectionOnly"
  NGINX_VERSION: ""
  OPENSSL_VERSION: "3.3.1"

jobs:
  build-deb:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source üì•
        uses: actions/checkout@v3

      - name: Install dependencies üîß
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git curl wget ca-certificates unzip pkg-config checkinstall \
            libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev libmaxminddb0 libmaxminddb-dev mmdb-bin \
            libzstd-dev autoconf automake libtool doxygen libxml2 libxml2-dev libyajl-dev libgeoip-dev liblmdb-dev \
            libfuzzy-dev libcurl4-openssl-dev liblua5.3-dev cmake

      - name: Download OpenSSL üõ°
        run: |
          curl -LO "https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz"
          tar xzf "openssl-${OPENSSL_VERSION}.tar.gz"

      - name: Clone NGINX üåê
        run: |
          git clone https://github.com/nginx/nginx.git
          cd nginx
          if [ -n "${NGINX_VERSION}" ]; then
            git checkout "${NGINX_VERSION}"
          fi

      - name: Clone third-party modules üß©
        run: |
          git clone --depth 1 https://github.com/google/ngx_brotli.git
          cd ngx_brotli
          git submodule update --init --recursive
          # Build Brotli library for NGINX
          mkdir -p deps/brotli/out
          cd deps/brotli
          cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release -B out
          cmake --build out
          cd ../../
          git clone --depth 1 https://github.com/tokers/zstd-nginx-module.git
          git clone --depth 1 https://github.com/leev/ngx_http_geoip2_module.git
          git clone --depth 1 https://github.com/openresty/headers-more-nginx-module.git
          git clone --depth 1 https://github.com/FRiCKLE/ngx_cache_purge.git
          git clone --depth 1 https://github.com/aperezdc/ngx-fancyindex.git

      - name: Build ModSecurity v3 üõ°Ô∏è
        if: env.ENABLE_MODSEC == 'true'
        run: |
          git clone --depth 1 https://github.com/owasp-modsecurity/ModSecurity.git
          cd ModSecurity
          git submodule update --init --recursive
          ./build.sh
          ./configure
          make -j"$(nproc)"
          sudo make install
          sudo ldconfig
          cd ..
          git clone --depth 1 https://github.com/owasp-modsecurity/ModSecurity-nginx.git
          # Copy starter pack rules from /extras if present
          if [ -d ../extras/modsec-starter-pack/rules ]; then
            sudo cp ../extras/modsec-starter-pack/rules/*.conf /etc/modsecurity/rules/
            sudo cp ../extras/modsec-starter-pack/modsecurity.conf /etc/modsecurity/modsecurity.conf
          fi

      - name: Configure & Build NGINX ‚ö°
        run: |
          cd nginx
          CONFIG_ARGS="\
            --with-compat \
            --with-http_ssl_module \
            --with-http_v2_module \
            --with-http_v3_module \
            --with-stream=dynamic \
            --with-stream_ssl_module \
            --with-stream_ssl_preread_module \
            --with-http_realip_module \
            --with-http_addition_module \
            --with-http_sub_module \
            --with-http_dav_module \
            --with-http_flv_module \
            --with-http_mp4_module \
            --with-http_gunzip_module \
            --with-http_gzip_static_module \
            --with-http_auth_request_module \
            --with-http_random_index_module \
            --with-http_secure_link_module \
            --with-http_slice_module \
            --with-http_stub_status_module \
            --with-pcre-jit \
            --with-openssl=../openssl-${OPENSSL_VERSION} \
            --add-module=../ngx_brotli \
            --add-module=../zstd-nginx-module \
            --add-module=../ngx_http_geoip2_module \
            --add-module=../headers-more-nginx-module \
            --add-module=../ngx_cache_purge \
            --add-module=../ngx-fancyindex"
          if [ "${ENABLE_MODSEC}" = "true" ]; then
            CONFIG_ARGS="${CONFIG_ARGS} --add-module=../ModSecurity-nginx"
          fi
          ./auto/configure ${CONFIG_ARGS} \
            --with-cc-opt='-O2 -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security' \
            --with-ld-opt='-Wl,-z,relro,-z,now -L/usr/local/lib -L../ngx_brotli/deps/brotli/out'
          make -j"$(nproc)"

      - name: Package .deb with checkinstall üì¶
        run: |
          cd nginx
          sudo checkinstall --pkgname=nginx-party \
            --pkgversion=1.0 \
            --backup=no --deldoc=yes --fstrans=no --default

      - name: Upload NGINX .deb artifact üì¶
        uses: actions/upload-artifact@v4
        with:
          name: nginx-party-deb
          path: ./nginx/nginx-party_*.deb
